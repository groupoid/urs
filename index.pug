include header

html
    head
        meta(property='og:title'       content='URS')
        meta(property='og:description' content='Cohesive Type Theory')
        meta(property='og:url'         content='https://urs.groupoid.space/')

block title
    title URS

block content
    nav
        <a href='#'>URS</a>

    article.main
        .exe
            section
                h1 QUANTUM TYPE SYSTEM
            aside
                time Published: 28 FEB 2025

                +tex.
                    We present a layered type theory that integrates three foundational
                    frameworks: Homotopy Type System (HTS), de Rham Cohesive Modal Type
                    Theory (CMTT), and Equivariant Super Type Theory (ESTT). This system
                    builds a progressive structure for formalizing mathematical and
                    physical concepts, from homotopy and higher categorical structures,
                    through geometric cohesion and differential properties, to the rich
                    graded and equivariant world of supergeometry. Inspired by Urs
                    Schreiber’s work on equivariant super homotopy theory, this layered
                    approach offers a modular, type-theoretic foundation for synthetic
                    supergeometry and beyond.

                +tex.
                    Type theory has emerged as a powerful language for mathematics
                    and physics, unifying computation, logic, and structure. This
                    article introduces a three-layered type theory that extends
                    Martin-Löf’s intensional type theory into a framework capable
                    of capturing homotopy, cohesion, and supergeometry:

                +tex.
                    1) Homotopy Type System (HTS): foundation for higher categorical structures via types as $\infty$-groupoids.
                    2) Cohesive Modal Type Theory: modal operators for geometric cohesion and differential structure.
                    3) Equivariant Super Type Theory (ESTT): Thegraded universes/tensors, group actions, and super-modality.

                +tex.
                    Each layer builds on the previous, culminating in a system tailored
                    to formalize superpoints ($\mathbb{R}^{m|n}$), supersymmetry, and equivariant structures,
                    as exemplified in Schreiber’s "Equivariant Super Homotopy Theory" (2012).

            section
                .macro
                    .macro__col
                        h3#hts <b>MLTT</b>
                        ol
                            li: a(href='https://urs.groupoid.space/foundations/prop/') PROP
                            li: a(href='https://urs.groupoid.space/foundations/universe/') U<sub>0</sub> : U<sub>1</sub>
                            li: a(href='https://urs.groupoid.space/foundations/forall/') FORALL
                            li: a(href='https://urs.groupoid.space/foundations/exists/') EXISTS
                            li: a(href='https://urs.groupoid.space/foundations/real/') REAL
                    .macro__col
                        h3#mltt <b>COHESIVE</b>
                        ol
                            li: a(href='https://urs.groupoid.space/foundations/graded/') GRADED
                            li: a(href='https://urs.groupoid.space/foundations/bose/') BOSONIC
                            li: a(href='https://urs.groupoid.space/foundations/flat/') FLAT
                            li: a(href='https://urs.groupoid.space/foundations/sharp/') SHARP
                            li: a(href='https://urs.groupoid.space/foundations/shape/') SHAPE
                            li: a(href='https://urs.groupoid.space/foundations/tensor/') TENSOR
                            li: a(href='https://urs.groupoid.space/foundations/smthset/') SMTHSET
                            li: a(href='https://urs.groupoid.space/foundations/supsmthset/') SUPSMTHSET
                    .macro__col
                        h3#mltt <b>TED-K</b>
                        ol
                            li: a(href='https://urs.groupoid.space/foundations/spectra/') SPECTRA
                            li: a(href='https://urs.groupoid.space/foundations/grpd/') GRPD
                            li: a(href='https://urs.groupoid.space/foundations/ku/') KU
                            li: a(href='https://urs.groupoid.space/foundations/diff/') DIFF
                            li: a(href='https://urs.groupoid.space/foundations/diffku/') DIFFKU
                            li: a(href='https://urs.groupoid.space/foundations/conf/') CONF<sup>n</sup>
                            li: a(href='https://urs.groupoid.space/foundations/qubit/') QUBIT
                            li: a(href='https://urs.groupoid.space/foundations/braid/') BRAID
                            li: a(href='https://urs.groupoid.space/foundations/linear/') LINEAR
                br
                +tex.
                    $\mathbf{Installation}$.

                +tex.
                    Urs operates as an OCaml framework, manipulating pure ASTs, similar to a Lisp-like
                    environment, pending a dedicated syntax.

                +code.
                    $ git clone git@github.com:groupoid/urs
                    $ ocamlfind ocamlc -o urs -package z3 -linkpkg src/urs.ml

            section
                h1 SYNTAX
                +tex(true).
                    $$
                    \begin{array}{c} \\
                       \mathrm{Urs} := \mathrm{MLTT}\ |\ \mathrm{Cohesive}\ \\
                       \mathrm{MLTT} := \mathrm{Cosmos}\ |\ \mathrm{Var}\ |\ \mathrm{Forall}\ |\ \mathrm{Exists}\ \\
                       \mathrm{Cohesive} := \mathrm{Base}\ |\ \mathrm{Smooth}\ |\ \mathrm{Spectra}\ |\ \mathrm{Quantum}\ \\
                       \mathrm{Cosmos} := \mathbf{Prop}\ :\ \mathbf{U_0}\ :\ \mathbf{U_1}\ \\
                       \mathrm{Var} := \mathbf{var}\ \mathrm{ident}\ |\ \mathbf{hole}\ \\
                       \mathrm{Forall} := \forall\ \mathrm{ident}\ \mathrm{E}\ \mathrm{E}\ |\ \lambda\ \mathrm{ident}\ \mathrm{E}\ \mathrm{E}\ |\ \mathrm{E}\ \mathrm{E}\ \\
                       \mathrm{Exists} := \exists\ \mathrm{ident}\ \mathrm{E}\ \mathrm{E}\ |\ (\mathrm{E}, \mathrm{E})\ |\ \mathrm{E}\mathbf{.1}\ |\ \mathrm{E}\mathbf{.2}\ \\
                       \mathrm{Base} := \mathbf{Nat}\ |\ \mathbf{Real}\ |\ \mathbf{Complex}\ \\
                       \mathrm{Smooth} := \mathbf{SmthSet}\ |\ \mathbf{plt}\ |\ \mathbf{precomp}\ |\ \mathbf{eval}\ \\
                       \mathrm{Spectra} := \mathbf{Sp}\ |\ \mathbf{susp}\ |\ \mathbf{wedge}\ |\ \mathbf{sp}\ \\
                       \mathrm{Quantum} := \mathbf{Hilbert}\ |\ \mathbf{qubit}\ |\ \mathbf{KU_G}\ \\
                       \\
                    \end{array}
                    $$

                h1 SEMANTICS
                br

                h2 MLTT
                +tex.
                    $\mathbf{Definition\ 1.3.1}$ ($\forall$-Formation, Dependent Product). The
                    $\forall$-type forms dependent function spaces $f : \forall\ (x : A), B(x)$ with
                    domain $A$ and codomain a type family $B : A \to \mathbf{U}$.
                +tex(true).
                    $$
                       \forall : \mathbf{U_0} =_{def} \prod_{A : \mathbf{U}} \prod_{x : A} B(x).
                    $$

                h2 COHESIVE
                +tex.
                    $\mathbf{Definition\ 1.4.1}$ ($\mathbf{plt}$-Formation, Plots). The $\mathbf{plt}$
                    constructor assigns to each $n : \mathbf{Nat}$ and $X : \mathbf{SmthSet}$ the set
                    of smooth maps $\mathbb{R}^n \to X$, defining the smooth structure of $X$.
                +tex(true).
                    $$
                       \mathbf{plt} : \prod_{n : \mathbf{Nat}} \prod_{X : \mathbf{SmthSet}} \mathbf{Set}.
                    $$

            section
                h1 Bibliography
                br

            section
                h2 TED-K
                p.

                +tex(true).
                    <br>
                    $$
                       \int
                    $$
                    <br><br>


include footer