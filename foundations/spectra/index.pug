include ../../header

html
    head
        meta(property='og:title'       content='SPECTRA')
        meta(property='og:description' content='Spectra Type for Stable Homotopy')
        meta(property='og:url'         content='https://urs.groupoid.space/foundations/spectra/')

block title
    title SPECTRA

block content
    nav
        <a href='../../index.html'>URS</a>
        <a href='#'>SPECTRA</a>
    article.main
        .exe
            section
                h1 SPECTRA TYPE
                span.
        aside
            time Published: 13 APR 2025
        .exe
            section
                +tex.
                    The $\mathbf{Sp}$ type models spectra in stable homotopy theory, sequences of types
                    $\{ E^n \}$ with structure maps $\sigma^n : \Sigma E^n \to E^{n+1}$, used in
                    K-theory, cohomology, and quantum field theory. Spectra capture stable invariants
                    and support operations like suspension and desuspension for defining shifted spectra
                    such as $\mathbb{S}^{-d}$.
                +tex.
                    In the cohesive type system, $\mathbf{Sp}$ is a parameterless type in
                    $\mathbf{U_{(0,0)}}$, not a universe, supporting operations like stabilization
                    $\Sigma^{\infty}$, suspension $\Sigma$, desuspension $\Sigma^{-1}$, smash product
                    $\otimes$, wedge sums $\vee$, homomorphisms $\mathbf{Hom}_{\mathbf{Sp}}$, and qubits
                    $\mathbf{Qubit}$. The category is stable and symmetric monoidal.

                h2 Formation
                +tex.
                    $\mathbf{Definition\ 3.1.1}$ ($\mathbf{Sp}$-Formation). The type $\mathbf{Sp}$ is a
                    base type in $\mathbf{U_{(0,0)}}$, representing all spectra, stable under suspension
                    and desuspension.
                +tex(true).
                    $$
                        \mathbf{Sp} : \mathbf{U_{(0,0)}}.
                    $$
                +code('urs').
                    def Sp : U_{(0,0)}

                h2 Introduction
                +tex.
                    $\mathbf{Definition\ 3.1.2}$ ($\mathbf{Sp}$-Introduction). Terms of type
                    $\mathbf{Sp}$ are introduced via a base constructor (sphere spectrum), or operations
                    like stabilization ($\Sigma^{\infty}$), suspension ($\Sigma$), desuspension
                    ($\Sigma^{-1}$), smash product ($\otimes$), wedge sums ($\vee$), homomorphisms
                    ($\mathbf{Hom}_{\mathbf{Sp}}$), or qubits ($\mathbf{Qubit}$), forming stable
                    homotopy classes.
                +tex(true).
                    $$
                        \mathbf{sp} : \mathbf{Sp},
                    $$
                    $$
                        \Sigma^{\infty} : \prod_{A : \mathbf{U_{(0,0)}}} \mathbf{Sp},
                    $$
                    $$
                        \mathbf{susp} : \prod_{E : \mathbf{Sp}} \mathbf{Sp},
                    $$
                    $$
                        \mathbf{desusp} : \prod_{E : \mathbf{Sp}} \mathbf{Sp},
                    $$
                    $$
                        \mathbf{tensor} : \prod_{E : \mathbf{Sp}} \prod_{F : \mathbf{Sp}} \mathbf{Sp},
                    $$
                    $$
                        \mathbf{wedge} : \prod_{E : \mathbf{Sp}} \prod_{F : \mathbf{Sp}} \mathbf{Sp},
                    $$
                    $$
                        \mathbf{Hom}_{\mathbf{Sp}} : \prod_{E : \mathbf{Sp}} \prod_{F : \mathbf{Sp}} \mathbf{Sp},
                    $$
                    $$
                        \mathbf{qubit} : \prod_{C : \mathbf{U_{(0,0)}}} \prod_{H : \mathbf{U_{(0,0)}}} \mathbf{Sp}.
                    $$
                +code('urs').
                    def sp : Sp
                    def stabilize (A : U_{(0,0)}) : Sp
                    def susp (E : Sp) : Sp
                    def desusp (E : Sp) : Sp
                    def tensor (E F : Sp) : Sp
                    def wedge (E F : Sp) : Sp
                    def hom_spec (E F : Sp) : Sp
                    def qubit (C H : U_{(0,0)}) : Sp

                h2 Elimination
                +tex.
                    $\mathbf{Definition\ 3.1.3}$ ($\mathbf{Sp}$-Elimination). The eliminator maps
                    $\mathbf{Sp}$ terms to properties in $\mathbf{U_{(0,0)}}$, analyzing stable
                    homotopy structure, including suspension and desuspension invariants.
                +tex(true).
                    $$
                        \mathbf{SpInd} :
                    $$
                    $$
                        \prod_{\beta : \mathbf{Sp} \to \mathbf{U_{(0,0)}}}
                        \left( \prod_{E : \mathbf{Sp}} \beta\ E \right) \to
                        \prod_{E : \mathbf{Sp}} \beta\ E.
                    $$
                +code('urs').
                    def sp_ind (beta : Sp -> U_{(0,0)})
                        (h : Π (E : Sp), beta E)
                      : Π (E : Sp), beta E

                h2 Theorems
                +tex.
                    $\mathbf{Theorem\ 3.1.4}$ (Suspension Invariance). For $E : \mathbf{Sp}$,
                    $\Sigma E : \mathbf{Sp}$, preserving stable homotopy structure, with suspension
                    and desuspension as equivalences.
                +tex(true).
                    $$
                        \mathbf{susp_inv} :
                    $$
                    $$
                        \prod_{E : \mathbf{Sp}} \mathbf{susp}\ E \simeq E.
                    $$
                +code('urs').
                    def susp_inv (E : Sp) : susp E ≃ E

                +tex.
                    $\mathbf{Theorem\ 3.1.5}$ (Desuspension Invariance). For $E : \mathbf{Sp}$,
                    $\Sigma^{-1} E : \mathbf{Sp}$, preserving stable homotopy structure, inverse to
                    suspension.
                +tex(true).
                    $$
                        \mathbf{desusp_inv} :
                    $$
                    $$
                        \prod_{E : \mathbf{Sp}} \mathbf{desusp}\ E \simeq E.
                    $$
                +code('urs').
                    def desusp_inv (E : Sp) : desusp E ≃ E

                +tex.
                    $\mathbf{Theorem\ 3.1.6}$ (Smash Product Closure). For $E, F : \mathbf{Sp}$,
                    $E \otimes F : \mathbf{Sp}$, the monoidal product in spectra.
                +tex(true).
                    $$
                        \mathbf{tensor_closure} :
                    $$
                    $$
                        \prod_{E : \mathbf{Sp}} \prod_{F : \mathbf{Sp}} E \otimes F : \mathbf{Sp}.
                    $$
                +code('urs').
                    def tensor_closure (E F : Sp) : Sp

                +tex.
                    $\mathbf{Theorem\ 3.1.7}$ (Wedge Sum Closure). For $E, F : \mathbf{Sp}$,
                    $E \vee F : \mathbf{Sp}$, the coproduct in spectra.
                +tex(true).
                    $$
                        \mathbf{wedge_closure} :
                    $$
                    $$
                        \prod_{E : \mathbf{Sp}} \prod_{F : \mathbf{Sp}} E \vee F : \mathbf{Sp}.
                    $$
                +code('urs').
                    def wedge_closure (E F : Sp) : Sp

                +tex.
                    $\mathbf{Theorem\ 3.1.8}$ (Homomorphism Spectrum). For $E, F : \mathbf{Sp}$,
                    $\mathbf{Hom}_{\mathbf{Sp}}(E, F) : \mathbf{Sp}$, the spectrum of stable maps.
                +tex(true).
                    $$
                        \mathbf{hom_closure} :
                    $$
                    $$
                        \prod_{E : \mathbf{Sp}} \prod_{F : \mathbf{Sp}} \mathbf{Hom}_{\mathbf{Sp}}(E, F) : \mathbf{Sp}.
                    $$
                +code('urs').
                    def hom_closure (E F : Sp) : Sp

                +tex.
                    $\mathbf{Theorem\ 3.1.9}$ (Qubit as Spectrum). For $C, H : \mathbf{U_{(0,0)}}$,
                    $\mathbf{Qubit}(C, H) : \mathbf{Sp}$, connecting quantum states to spectra.
                +tex(true).
                    $$
                        \mathbf{qubit_spectrum} :
                    $$
                    $$
                        \prod_{C : \mathbf{U_{(0,0)}}} \prod_{H : \mathbf{U_{(0,0)}}}
                        \mathbf{Qubit}(C, H) : \mathbf{Sp}.
                    $$
                +code('urs').
                    def qubit_spectrum (C H : U_{(0,0)}) : Sp

                +tex.
                    $\mathbf{Theorem\ 3.1.10}$ (Negative Suspension Spectrum). For $d : \mathbb{N}$,
                    $\mathbb{S}^{-d} : \mathbf{Sp}$, the $d$-fold desuspension of the sphere spectrum.
                +tex(true).
                    $$
                        \prod_{d : \mathbb{N}} \mathbb{S}^{-d} : \mathbf{Sp}.
                    $$
                +code('urs').
                    def neg_susp_spectrum (d : Nat) : Sp

include ../../footer
